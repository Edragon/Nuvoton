C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         02/09/2017 17:23:34 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_LD_AP
OBJECT MODULE PLACED IN .\Output\ISP_LD-AP.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\ISP_LD-AP.c BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBUG OBJ
                    -ECTEXTEND PRINT(.\LST\ISP_LD-AP.lst) TABS(2) OBJECT(.\Output\ISP_LD-AP.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 LDROM program APROM demo code
  15          //********************************************************************************************************
             -***
  16          
  17          //********************************************************************************************************
             -***
  18          //  Before using this demo code, please remind below CONFOGs setting, thanks.
  19          //                 CONFIG0.7 --> CBS=0
  20          //                 CONFIG1 = 0xFC, because this demo code size is 2495 Byte
  21          //********************************************************************************************************
             -***
  22          #include "N76E003.h"
  23          #include "Common.h"
  24          #include "Delay.h"
  25          #include "SFR_Macro.h"
  26          #include "Function_define.h"
  27          
  28          
  29          #define     CID_READ            0x0B
  30          #define     DID_READ            0x0C
  31          #define     CFG_READ            0xC0
  32          #define     CFG_ERASE           0xE2
  33          
  34          #define     PAGE_ERASE_AP       0x22
  35          #define     BYTE_READ_AP        0x00
  36          #define     BYTE_PROGRAM_AP     0x21
  37          
  38          #define     BYTE_PROGRAM_CFG    0xE1
  39          #define     BYTE_READ_CFG       0xC0
  40          
  41          #define     PAGE_SIZE           128
  42          
  43          #define     APROM_SIZE          8192   
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         02/09/2017 17:23:34 PAGE 2   

  44          #define     APROM_START_ADDR    0x0000
  45          
  46          #define     ERASE_FAIL          0x70
  47          #define     PROGRAM_FAIL        0x71
  48          #define     IAPFF_FAIL          0x72
  49          #define     IAP_PASS            0x00
  50          
  51          //--------------------------------------------------------------------------------------------------------
             ----
  52          void Trigger_IAP(void)
  53          {   
  54   1          set_IAPGO;                                  //trigger IAP
  55   1          if((CHPCON&SET_BIT6)==SET_BIT6)             //check IAPFF (CHPCON.6), if flag = 1, the ISP process is 
             -fail.
  56   1          {
  57   2              while(1)
  58   2              {
  59   3                clr_GPIO1;
  60   3                Timer0_Delay1ms(100);
  61   3                set_GPIO1;
  62   3                Timer0_Delay1ms(100);
  63   3              }
  64   2          }
  65   1      }                 
  66          
  67          //--------------------------------------------------------------------------------------------------------
             ----
  68          void Erase_CONFIG(void)
  69          {   
  70   1          set_IAPEN;
  71   1          
  72   1          IAPAL = 0x00;
  73   1          IAPAH = 0x00;
  74   1          IAPFD = 0xFF;
  75   1          IAPCN = CFG_ERASE;
  76   1          
  77   1          set_CFUEN;
  78   1          Trigger_IAP();
  79   1          clr_CFUEN;
  80   1          
  81   1          clr_IAPEN;
  82   1      }
  83          //--------------------------------------------------------------------------------------------------------
             ----
  84          void Erase_APROM(void)
  85          {   
  86   1          UINT16 u16Count;
  87   1      
  88   1          set_IAPEN;
  89   1          set_APUEN;                        // To erase or program APROM must enable APUEN
  90   1        
  91   1          IAPFD = 0xFF;                     // MUST setting IAPFD = 0xFF when do erase process.
  92   1          IAPCN = PAGE_ERASE_AP;
  93   1      
  94   1          for(u16Count=0x0000;u16Count<APROM_SIZE/PAGE_SIZE;u16Count++)
  95   1          {        
  96   2              IAPAL = LOBYTE(u16Count*PAGE_SIZE + APROM_START_ADDR);
  97   2              IAPAH = HIBYTE(u16Count*PAGE_SIZE + APROM_START_ADDR);
  98   2              Trigger_IAP(); 
  99   2          } 
 100   1          
 101   1          clr_APUEN;
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         02/09/2017 17:23:34 PAGE 3   

 102   1          clr_IAPEN;
 103   1      }
 104          //--------------------------------------------------------------------------------------------------------
             ----
 105          BIT Erase_APROM_Verify(void)
 106          {   
 107   1          UINT16 u16Count;
 108   1          BIT    Error_Flag = 0;
 109   1      
 110   1          set_IAPEN;
 111   1          
 112   1          IAPAL = LOBYTE(APROM_START_ADDR);
 113   1          IAPAH = HIBYTE(APROM_START_ADDR);
 114   1          IAPCN = BYTE_READ_AP;
 115   1      
 116   1          for(u16Count=0;u16Count<APROM_SIZE/PAGE_SIZE;u16Count++)
 117   1          {   
 118   2              IAPFD = 0x00;    
 119   2              Trigger_IAP();
 120   2      
 121   2              if(IAPFD != 0xFF)
 122   2              {
 123   3                  Error_Flag = 1;
 124   3                  break;
 125   3              }
 126   2      
 127   2              IAPAL++;
 128   2              if(IAPAL == 0x00)
 129   2              {
 130   3                  IAPAH++;
 131   3              }
 132   2          } 
 133   1          
 134   1          clr_IAPEN;
 135   1          
 136   1          if(Error_Flag == 1)
 137   1              return FAIL;
 138   1          else
 139   1              return PASS;
 140   1      }
 141          //--------------------------------------------------------------------------------------------------------
             ----
 142          void Program_APROM(void)
 143          {   
 144   1          UINT16 u16Count;
 145   1      
 146   1          set_IAPEN;
 147   1          set_APUEN;   
 148   1        
 149   1          IAPAL = LOBYTE(APROM_START_ADDR);
 150   1          IAPAH = HIBYTE(APROM_START_ADDR);
 151   1          IAPFD = 0xFF;
 152   1          IAPCN = BYTE_PROGRAM_AP;
 153   1      
 154   1          for(u16Count=0;u16Count<APROM_SIZE;u16Count++)
 155   1          {   
 156   2              IAPFD++;     
 157   2              Trigger_IAP();
 158   2             
 159   2              IAPAL++;
 160   2              if(IAPAL == 0)
 161   2              {
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         02/09/2017 17:23:34 PAGE 4   

 162   3                  IAPAH++;
 163   3              }
 164   2          } 
 165   1          
 166   1          clr_APUEN;
 167   1          clr_IAPEN;
 168   1      }
 169          //--------------------------------------------------------------------------------------------------------
             ----
 170          BIT Program_APROM_Verify(void)
 171          {   
 172   1          UINT16 u16Count;
 173   1          UINT8  u8Read_Data;
 174   1          BIT    Error_Flag = 0;
 175   1      
 176   1          set_IAPEN;
 177   1          
 178   1          IAPAL = LOBYTE(APROM_START_ADDR);
 179   1          IAPAH = HIBYTE(APROM_START_ADDR);
 180   1          IAPCN = BYTE_READ_AP;
 181   1      
 182   1          u8Read_Data = 0x00;
 183   1      
 184   1          for(u16Count=0;u16Count<APROM_SIZE;u16Count++)
 185   1          {   
 186   2              Trigger_IAP();
 187   2              if(IAPFD != u8Read_Data)
 188   2              {
 189   3                  Error_Flag = 1;
 190   3                  break;
 191   3              }
 192   2      
 193   2              IAPAL++;
 194   2              if(IAPAL == 0)
 195   2              {
 196   3                  IAPAH++;
 197   3              }
 198   2              u8Read_Data ++;
 199   2          } 
 200   1      
 201   1          clr_IAPEN;
 202   1           
 203   1          if(Error_Flag == 1)
 204   1              return FAIL;
 205   1          else
 206   1              return PASS;
 207   1      }
 208          //--------------------------------------------------------------------------------------------------------
             ----
 209          void Program_CONFIG(UINT8 u8Address,UINT8 u8Data)
 210          {   
 211   1          set_IAPEN;
 212   1          
 213   1          IAPAL = u8Address;
 214   1          IAPAH = 0x00;
 215   1          IAPFD = u8Data;
 216   1          IAPCN = BYTE_PROGRAM_CFG;
 217   1          
 218   1          set_CFUEN;
 219   1          Trigger_IAP();
 220   1          clr_CFUEN;
 221   1          
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         02/09/2017 17:23:34 PAGE 5   

 222   1          clr_IAPEN;
 223   1      }
 224          
 225          //--------------------------------------------------------------------------------------------------------
             ----
 226          void main (void) 
 227          {
 228   1          Set_All_GPIO_Quasi_Mode;
 229   1        
 230   1          clr_GPIO1;
 231   1          Timer0_Delay1ms(300);
 232   1          set_GPIO1;
 233   1          Timer0_Delay1ms(300);
 234   1          clr_GPIO1;
 235   1          Timer0_Delay1ms(300);
 236   1          set_GPIO1;
 237   1      
 238   1        
 239   1          Erase_APROM();
 240   1      //    if(Erase_APROM_Verify() == FAIL)
 241   1      //    {
 242   1      //        DISPLAY_LED = ERASE_FAIL;
 243   1      //        while(1);
 244   1      //    }
 245   1      
 246   1          Program_APROM();
 247   1      //    if(Program_APROM_Verify() == FAIL)
 248   1      //    {
 249   1      //        DISPLAY_LED = PROGRAM_FAIL;
 250   1      //        while(1);
 251   1      //    }   
 252   1          Program_CONFIG(0x04,0x0F);              //Program CONFIG4 =  0x0F; Enable WDT reset function. 
 253   1          //Please always very carefully about the CONFIG program function. espcially about the CBS bit / LDROM si
             -ze...
 254   1          Timer0_Delay1ms(200);
 255   1          while(1);
 256   1      }
 257          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    741    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
