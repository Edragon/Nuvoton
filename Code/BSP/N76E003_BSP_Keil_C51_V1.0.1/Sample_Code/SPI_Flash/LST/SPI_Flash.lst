C51 COMPILER V9.52.0.0   SPI_FLASH                                                         02/09/2017 18:08:02 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE SPI_FLASH
OBJECT MODULE PLACED IN .\Output\SPI_Flash.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\SPI_Flash.c BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBUG OBJ
                    -ECTEXTEND PRINT(.\LST\SPI_Flash.lst) TABS(2) OBJECT(.\Output\SPI_Flash.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2017 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2017
  11          //********************************************************************************************************
             -***
  12          
  13          //********************************************************************************************************
             -***
  14          //  File Function: N76E003 Access SPI Flash (W25Q16BV) demo code
  15          //********************************************************************************************************
             -***
  16          
  17          #include "N76E003.h"
  18          #include "SFR_Macro.h"
  19          #include "Function_define.h"
  20          #include "Common.h"
  21          #include "Delay.h"
  22          
  23          
  24          #define SPI_CLOCK       0
  25          
  26          #define SS_PIN          P15
  27          #define WRITE_ENABLE    0x06
  28          #define WRITE_DISABLE   0x04
  29          #define READ_DATA       0x03
  30          #define PAGE_PROGRAM    0x02
  31          #define CHIP_ERASE      0xC7
  32          #define READ_STATUS1    0x05
  33          
  34          //--------------------------------------------------------------------------------------------------------
             ----
  35          void SPI_Error(void)
  36          {
  37   1          printf ("\n*  SPI Error, please check the connection between MCU and SPI Flash");
  38   1          while(1);
  39   1      }
  40          //--------------------------------------------------------------------------------------------------------
             ----
  41          void SPI_Initial(void)
  42          {
  43   1          #if   SPI_CLOCK == 0
C51 COMPILER V9.52.0.0   SPI_FLASH                                                         02/09/2017 18:08:02 PAGE 2   

  44   1                  clr_SPR1;
  45   1                  clr_SPR0;
  46   1          #elif SPI_CLOCK == 1
                          clr_SPR1;
                          set_SPR0;
                  #elif SPI_CLOCK == 2
                          set_SPR1;  
                          clr_SPR0;
                  #elif SPI_CLOCK == 3
                          set_SPR1;
                          set_SPR0;
                  #endif
  56   1      
  57   1          /* /SS General purpose I/O ( No Mode Fault ) */
  58   1          set_DISMODF;
  59   1          clr_SSOE;
  60   1      
  61   1          /* SPI in Master mode */
  62   1          set_MSTR;
  63   1      
  64   1          /* MSB first */
  65   1          clr_LSBFE;
  66   1      
  67   1          clr_CPOL;
  68   1          clr_CPHA;
  69   1          
  70   1          /* Enable SPI function */
  71   1          set_SPIEN;
  72   1      }
  73          //--------------------------------------------------------------------------------------------------------
             ----
  74          void Read_MID_DID(UINT8 *pu8MID,UINT8 *pu8DID)
  75          {
  76   1          SS_PIN = 0;
  77   1          SPDR = 0x90;
  78   1          while((SPSR&0x80)==0x00);
  79   1          clr_SPIF;
  80   1      
  81   1          SPDR = 0x00;
  82   1          while((SPSR&0x80)==0x00);
  83   1          clr_SPIF;
  84   1      
  85   1          SPDR = 0x00;
  86   1          while((SPSR&0x80)==0x00);
  87   1          clr_SPIF;
  88   1      
  89   1          SPDR = 0x00;
  90   1          while((SPSR&0x80)==0x00);
  91   1          clr_SPIF;
  92   1      
  93   1          SPDR = 0xFF;
  94   1          while((SPSR&0x80)==0x00);
  95   1          *pu8MID = SPDR;
  96   1          clr_SPIF;
  97   1      
  98   1          SPDR = 0xFF;
  99   1          while((SPSR&0x80)==0x00);
 100   1          *pu8DID = SPDR;
 101   1          clr_SPIF;
 102   1          SS_PIN = 1;    
 103   1      }
 104          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.52.0.0   SPI_FLASH                                                         02/09/2017 18:08:02 PAGE 3   

             ----
 105          void Flash_Write_Enable(void)
 106          {
 107   1          SS_PIN = 0;
 108   1          SPDR = WRITE_ENABLE;
 109   1          while((SPSR&0x80)==0x00);
 110   1          clr_SPIF;
 111   1          SS_PIN = 1;    
 112   1      }
 113          //--------------------------------------------------------------------------------------------------------
             ----
 114          void Flash_Write_Disable(void)
 115          {
 116   1          SS_PIN = 0;
 117   1          SPDR = WRITE_DISABLE;
 118   1          while((SPSR&0x80)==0x00);
 119   1          clr_SPIF;
 120   1          SS_PIN = 1;    
 121   1      }
 122          //--------------------------------------------------------------------------------------------------------
             ----
 123          void Flash_Chip_Erase(void)
 124          {
 125   1          SS_PIN = 0;
 126   1          SPDR = CHIP_ERASE;
 127   1          while((SPSR&0x80)==0x00);
 128   1          clr_SPIF;
 129   1          SS_PIN = 1;    
 130   1      }
 131          //--------------------------------------------------------------------------------------------------------
             ----
 132          void Flash_Read_Status(void)
 133          {
 134   1          UINT8 u8Status;
 135   1      
 136   1          SS_PIN = 0;
 137   1          do{
 138   2              SPDR = READ_STATUS1;
 139   2              while((SPSR&0x80)==0x00);
 140   2              clr_SPIF;
 141   2          
 142   2              SPDR = 0xFF;
 143   2              while((SPSR&0x80)==0x00);
 144   2              u8Status = SPDR;
 145   2              clr_SPIF;
 146   2          }while((u8Status&0x01)==0x01);
 147   1          SS_PIN = 1;    
 148   1      }
 149          //--------------------------------------------------------------------------------------------------------
             ----
 150          void Flash_Erase_Verify(void)
 151          {
 152   1          UINT16 u16CNT;    
 153   1          UINT8  u8Data;
 154   1      
 155   1          SS_PIN = 0;
 156   1      
 157   1          SPDR = READ_DATA;
 158   1          while((SPSR&0x80)==0x00);
 159   1          clr_SPIF;
 160   1      
 161   1          /* 24-bit Address */
C51 COMPILER V9.52.0.0   SPI_FLASH                                                         02/09/2017 18:08:02 PAGE 4   

 162   1          SPDR = 0x00;
 163   1          while((SPSR&0x80)==0x00);
 164   1          clr_SPIF;
 165   1      
 166   1          SPDR = 0x00;
 167   1          while((SPSR&0x80)==0x00);
 168   1          clr_SPIF;
 169   1      
 170   1          SPDR = 0x00;
 171   1          while((SPSR&0x80)==0x00);
 172   1          clr_SPIF;
 173   1      
 174   1          for(u16CNT=0;u16CNT<256;u16CNT++)
 175   1          {
 176   2              SPDR = 0x00;
 177   2              while((SPSR&0x80)==0x00);
 178   2              u8Data = SPDR;
 179   2              clr_SPIF;
 180   2              if(u8Data != 0xFF)
 181   2              {
 182   3                  SPI_Error();
 183   3              }
 184   2          }
 185   1      
 186   1          SS_PIN = 1; 
 187   1      }
 188          //--------------------------------------------------------------------------------------------------------
             ----
 189          void Flash_Program(void)
 190          {
 191   1          UINT16 u16CNT; 
 192   1          
 193   1          SS_PIN = 0;
 194   1      
 195   1          SPDR = PAGE_PROGRAM;
 196   1          while((SPSR&0x80)==0x00);
 197   1          clr_SPIF;
 198   1      
 199   1          /* 24-bit Address */
 200   1          SPDR = 0x00;
 201   1          while((SPSR&0x80)==0x00);
 202   1          clr_SPIF;
 203   1      
 204   1          SPDR = 0x00;
 205   1          while((SPSR&0x80)==0x00);
 206   1          clr_SPIF;
 207   1      
 208   1          SPDR = 0x00;
 209   1          while((SPSR&0x80)==0x00);
 210   1          clr_SPIF;
 211   1      
 212   1          /* Send the data to SPI_Flash buffer */
 213   1          for(u16CNT=0;u16CNT<256;u16CNT++)
 214   1          {
 215   2              SPDR = (UINT8)u16CNT;
 216   2              while((SPSR&0x80)==0x00);
 217   2              clr_SPIF;
 218   2          }
 219   1          
 220   1          SS_PIN = 1;    
 221   1      }
 222          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.52.0.0   SPI_FLASH                                                         02/09/2017 18:08:02 PAGE 5   

             ----
 223          void Flash_Program_Verify(void)
 224          {
 225   1          UINT16 u16CNT;    
 226   1          UINT8  u8Data;
 227   1      
 228   1          SS_PIN = 0;
 229   1      
 230   1          SPDR = READ_DATA;
 231   1          while((SPSR&0x80)==0x00);
 232   1          clr_SPIF;
 233   1      
 234   1          /* 24-bit Address */
 235   1          SPDR = 0x00;
 236   1          while((SPSR&0x80)==0x00);
 237   1          clr_SPIF;
 238   1      
 239   1          SPDR = 0x00;
 240   1          while((SPSR&0x80)==0x00);
 241   1          clr_SPIF;
 242   1      
 243   1          SPDR = 0x00;
 244   1          while((SPSR&0x80)==0x00);
 245   1          clr_SPIF;
 246   1      
 247   1          for(u16CNT=0;u16CNT<256;u16CNT++)
 248   1          {
 249   2              SPDR = 0x00;
 250   2              while((SPSR&0x80)==0x00);
 251   2              u8Data = SPDR;
 252   2              clr_SPIF;
 253   2              if(u8Data != (UINT8)u16CNT)
 254   2              {
 255   3                  SPI_Error();
 256   3              }
 257   2          }
 258   1      
 259   1          SS_PIN = 1; 
 260   1      }
 261          //--------------------------------------------------------------------------------------------------------
             ----
 262          void main(void)
 263          {      
 264   1          UINT8 u8MID,u8DID;
 265   1      
 266   1          /* Note
 267   1             MCU power on system clock is HIRC (22.1184MHz), so Fsys = 22.1184MHz
 268   1          */
 269   1          
 270   1          Set_All_GPIO_Quasi_Mode;
 271   1          InitialUART0_Timer3(115200);             /* 9600 Baud Rate*/
 272   1          SPI_Initial();
 273   1      
 274   1          Read_MID_DID(&u8MID,&u8DID);
 275   1      
 276   1          if((u8MID != 0xEF)&&(u8DID != 0x14))
 277   1          {
 278   2              SPI_Error();
 279   2          }
 280   1      
 281   1          /* The procedure of SPI Flash at erase mode */
 282   1          Flash_Write_Enable();
C51 COMPILER V9.52.0.0   SPI_FLASH                                                         02/09/2017 18:08:02 PAGE 6   

 283   1          Flash_Chip_Erase();
 284   1          Flash_Read_Status();
 285   1          Flash_Write_Disable();
 286   1          
 287   1          Flash_Erase_Verify();
 288   1      
 289   1          /* The procedure of SPI Flash at program mode */
 290   1          Flash_Write_Enable();
 291   1          Flash_Program();
 292   1          Flash_Read_Status();
 293   1          Flash_Write_Disable();
 294   1      
 295   1          /* Program verify */
 296   1          Flash_Program_Verify();
 297   1      
 298   1          printf("\nFinished the SPI Demo Code and test pass!!!\n");
 299   1          while(1);
 300   1      }
 301          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    560    ----
   CONSTANT SIZE    =    115    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
